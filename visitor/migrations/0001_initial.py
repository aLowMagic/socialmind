# Generated by Django 2.0.7 on 2018-07-14 19:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('name', models.CharField(max_length=20)),
                ('citycode', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'area',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('articleid', models.CharField(db_column='articleID', max_length=36, primary_key=True, serialize=False)),
                ('sourcearticleid', models.CharField(blank=True, db_column='sourceArticleID', max_length=36, null=True)),
                ('title', models.CharField(blank=True, max_length=1024, null=True)),
                ('keywords', models.CharField(blank=True, db_column='keyWords', max_length=1024, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('posttime', models.CharField(blank=True, db_column='postTime', max_length=32, null=True)),
                ('commentnumber', models.IntegerField(blank=True, db_column='commentNumber', null=True)),
                ('scannumber', models.IntegerField(blank=True, db_column='scanNumber', null=True)),
                ('participationnumber', models.IntegerField(blank=True, db_column='participationNumber', null=True)),
                ('replynumber', models.IntegerField(blank=True, db_column='replyNumber', null=True)),
                ('likenumber', models.IntegerField(blank=True, db_column='likeNumber', null=True)),
                ('recommendnumber', models.IntegerField(blank=True, db_column='recommendNumber', null=True)),
                ('collectnumber', models.IntegerField(blank=True, db_column='collectNumber', null=True)),
                ('givereward', models.IntegerField(blank=True, db_column='giveReward', null=True)),
                ('transmitnumber', models.IntegerField(blank=True, db_column='transmitNumber', null=True)),
                ('tramplenumber', models.IntegerField(blank=True, db_column='trampleNumber', null=True)),
                ('newsresource', models.CharField(blank=True, db_column='newsResource', max_length=64, null=True)),
                ('similardegree', models.FloatField(blank=True, db_column='similarDegree', null=True)),
                ('sourceauthorid', models.CharField(blank=True, db_column='sourceAuthorID', max_length=255, null=True)),
            ],
            options={
                'db_table': 'article',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('article_commentid', models.CharField(db_column='article_commentID', max_length=36, primary_key=True, serialize=False)),
                ('sourcecommentid', models.CharField(blank=True, db_column='sourceCommentID', max_length=36, null=True)),
                ('likenumber', models.IntegerField(blank=True, db_column='likeNumber', null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('commenttime', models.CharField(blank=True, db_column='commentTime', max_length=32, null=True)),
                ('replaynumber', models.IntegerField(blank=True, db_column='replayNumber', null=True)),
                ('graphurl', models.CharField(blank=True, db_column='graphURL', max_length=64, null=True)),
            ],
            options={
                'db_table': 'article_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleLabeled',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('articleid', models.CharField(blank=True, db_column='articleID', max_length=36, null=True)),
                ('istrue', models.CharField(blank=True, db_column='isTrue', max_length=10, null=True)),
                ('credtype', models.CharField(blank=True, db_column='credType', max_length=20, null=True)),
            ],
            options={
                'db_table': 'article_labeled',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleSimilar',
            fields=[
                ('articlesimilarid', models.CharField(db_column='articleSimilarID', max_length=64, primary_key=True, serialize=False)),
                ('similardegree', models.FloatField(blank=True, db_column='similarDegree', null=True)),
            ],
            options={
                'db_table': 'article_similar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('authorid', models.CharField(db_column='authorID', max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('sex', models.CharField(blank=True, max_length=16, null=True)),
                ('birthday', models.CharField(blank=True, max_length=32, null=True)),
                ('address', models.CharField(blank=True, max_length=64, null=True)),
                ('focusnumber', models.IntegerField(blank=True, db_column='focusNumber', null=True)),
                ('fansnumber', models.IntegerField(blank=True, db_column='fansNumber', null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('friendnumber', models.IntegerField(blank=True, db_column='friendNumber', null=True)),
                ('replaynumber', models.IntegerField(blank=True, db_column='replayNumber', null=True)),
                ('clicknumber', models.IntegerField(blank=True, db_column='clickNumber', null=True)),
                ('loginnumber', models.IntegerField(blank=True, db_column='loginNumber', null=True)),
                ('introduction', models.CharField(blank=True, max_length=255, null=True)),
                ('registrationtime', models.CharField(blank=True, db_column='registrationTime', max_length=32, null=True)),
                ('educationbackground', models.CharField(blank=True, db_column='educationBackground', max_length=32, null=True)),
                ('career', models.CharField(blank=True, max_length=32, null=True)),
                ('elitepostnumber', models.IntegerField(blank=True, db_column='elitePostNumber', null=True)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('onlinetime', models.CharField(blank=True, db_column='onlineTime', max_length=32, null=True)),
                ('famedegree', models.IntegerField(blank=True, db_column='fameDegree', null=True)),
                ('lastlogintime', models.CharField(blank=True, db_column='lastLoginTime', max_length=32, null=True)),
                ('workunit', models.CharField(blank=True, db_column='workUnit', max_length=64, null=True)),
                ('updatearticaltime', models.CharField(blank=True, db_column='updateArticalTime', max_length=32, null=True)),
                ('phonenumber', models.CharField(blank=True, db_column='phoneNumber', max_length=32, null=True)),
                ('reputation', models.IntegerField(blank=True, null=True)),
                ('getreward', models.IntegerField(blank=True, db_column='getReward', null=True)),
                ('givereward', models.IntegerField(blank=True, db_column='giveReward', null=True)),
                ('iscertification', models.IntegerField(blank=True, db_column='isCertification', null=True)),
                ('portraiturl', models.CharField(blank=True, db_column='portraitURL', max_length=64, null=True)),
                ('realname', models.CharField(blank=True, db_column='realName', max_length=32, null=True)),
                ('sexualorientation', models.CharField(blank=True, db_column='sexualOrientation', max_length=16, null=True)),
                ('email', models.CharField(blank=True, max_length=64, null=True)),
                ('qq', models.CharField(blank=True, db_column='QQ', max_length=64, null=True)),
                ('bloodtype', models.CharField(blank=True, db_column='bloodType', max_length=16, null=True)),
                ('isbigv', models.IntegerField(blank=True, db_column='isBigV', null=True)),
                ('sourceauthorid', models.CharField(blank=True, db_column='sourceAuthorID', max_length=255, null=True)),
            ],
            options={
                'db_table': 'author',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bulletin',
            fields=[
                ('bulletinid', models.CharField(db_column='bulletinID', max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('introduction', models.CharField(blank=True, max_length=255, null=True)),
                ('bulletinurl', models.CharField(blank=True, db_column='bulletinURL', max_length=64, null=True)),
                ('bulletintype', models.CharField(blank=True, db_column='bulletinType', max_length=32, null=True)),
                ('generatetime', models.CharField(blank=True, db_column='generateTime', max_length=32, null=True)),
            ],
            options={
                'db_table': 'bulletin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BulletinImageUrl',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('event_name', models.CharField(blank=True, max_length=128, null=True)),
                ('image_url', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 'bulletin_image_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BulletinStyleId',
            fields=[
                ('bulletinstyleid', models.CharField(db_column='bulletinStyleID', max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('introduction', models.CharField(blank=True, max_length=255, null=True)),
                ('covergraph', models.TextField(blank=True, db_column='coverGraph', null=True)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=64, null=True)),
                ('uploadtime', models.CharField(blank=True, db_column='uploadTime', max_length=32, null=True)),
                ('downloadnumber', models.IntegerField(blank=True, db_column='downloadNumber', null=True)),
                ('likenumber', models.IntegerField(blank=True, db_column='likeNumber', null=True)),
                ('collectnumber', models.IntegerField(blank=True, db_column='collectNumber', null=True)),
            ],
            options={
                'db_table': 'bulletin_style_id',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('name', models.CharField(max_length=20)),
                ('provincecode', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CleanerrorNotUsed',
            fields=[
                ('exceptionid', models.CharField(db_column='exceptionID', max_length=36, primary_key=True, serialize=False)),
                ('userid', models.CharField(blank=True, db_column='UserID', max_length=36, null=True)),
                ('operatime', models.CharField(blank=True, db_column='operaTime', max_length=255, null=True)),
                ('userip', models.CharField(blank=True, db_column='userIP', max_length=36, null=True)),
                ('errorcode', models.CharField(blank=True, db_column='errorCode', max_length=255, null=True)),
            ],
            options={
                'db_table': 'cleanerror(not used)',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CleanLocation',
            fields=[
                ('cleanlocationid', models.CharField(db_column='cleanLocationID', max_length=36, primary_key=True, serialize=False)),
                ('tableid', models.CharField(blank=True, db_column='tableID', max_length=32, null=True)),
                ('columnname', models.CharField(blank=True, db_column='columnName', max_length=64, null=True)),
                ('rowkey', models.CharField(blank=True, max_length=64, null=True)),
                ('columnfamily', models.CharField(blank=True, db_column='columnFamily', max_length=64, null=True)),
                ('timestamp', models.IntegerField(blank=True, db_column='timeStamp', null=True)),
            ],
            options={
                'db_table': 'clean_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CleanLogManager',
            fields=[
                ('cleanlogid', models.CharField(db_column='cleanLogID', max_length=36, primary_key=True, serialize=False)),
                ('user_define_old_value', models.CharField(blank=True, max_length=255, null=True)),
                ('cleantime', models.CharField(blank=True, db_column='cleanTime', max_length=255, null=True)),
                ('tablename', models.CharField(blank=True, db_column='tableName', max_length=36, null=True)),
                ('columnname', models.CharField(blank=True, db_column='columnName', max_length=36, null=True)),
                ('user_define_new_value', models.CharField(blank=True, max_length=255, null=True)),
                ('resultstate', models.CharField(blank=True, db_column='resultState', max_length=36, null=True)),
                ('response_time', models.CharField(blank=True, max_length=255, null=True)),
                ('errorcode', models.CharField(blank=True, db_column='errorCode', max_length=255, null=True)),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=36, null=True)),
                ('errormessage', models.TextField(blank=True, db_column='errorMessage', null=True)),
                ('self_defining_value', models.CharField(blank=True, max_length=255, null=True)),
                ('cleanlocationid', models.CharField(blank=True, db_column='cleanLocationID', max_length=255, null=True)),
            ],
            options={
                'db_table': 'clean_log_manager',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CleanStrategy',
            fields=[
                ('isuse', models.CharField(blank=True, db_column='IsUse', max_length=8, null=True)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('cleanstategyid', models.CharField(db_column='cleanStategyID', max_length=36, primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=36, null=True)),
            ],
            options={
                'db_table': 'clean_strategy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClickEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.CharField(db_column='objectID', max_length=36)),
                ('clicknum', models.IntegerField(blank=True, db_column='clickNum', null=True)),
            ],
            options={
                'db_table': 'click_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('commentid', models.CharField(db_column='commentID', max_length=36, primary_key=True, serialize=False)),
                ('commentcontent', models.CharField(blank=True, db_column='commentContent', max_length=255, null=True)),
                ('commenttime', models.CharField(blank=True, db_column='commentTime', max_length=32, null=True)),
            ],
            options={
                'db_table': 'comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConfigConfigitem',
            fields=[
                ('spiderconfigitemid', models.CharField(db_column='spiderConfigItemID', max_length=36, primary_key=True, serialize=False)),
                ('configitemvalue', models.CharField(blank=True, db_column='configItemValue', max_length=1000, null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'config_configitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Configitem',
            fields=[
                ('configitemid', models.CharField(db_column='configItemID', max_length=36, primary_key=True, serialize=False)),
                ('displayname', models.CharField(blank=True, db_column='displayName', max_length=500, null=True)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('type', models.CharField(blank=True, max_length=1000, null=True)),
                ('note', models.CharField(blank=True, max_length=1000, null=True)),
                ('defaultvalue', models.CharField(blank=True, db_column='defaultValue', max_length=32, null=True)),
            ],
            options={
                'db_table': 'configitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataDictionary',
            fields=[
                ('attributevalue', models.CharField(blank=True, db_column='attributeValue', max_length=128, null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('attributename', models.CharField(blank=True, db_column='attributeName', max_length=64, null=True)),
                ('datadictionaryid', models.CharField(db_column='dataDictionaryID', max_length=36, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'data_dictionary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('tablenameid', models.CharField(db_column='tableNameID', max_length=36, primary_key=True, serialize=False)),
                ('tablename', models.CharField(blank=True, db_column='tableName', max_length=64, null=True)),
                ('count', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'data_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventOpinion',
            fields=[
                ('opinionid', models.CharField(db_column='opinionID', max_length=36, primary_key=True, serialize=False)),
                ('objectid', models.CharField(blank=True, db_column='objectID', max_length=36, null=True)),
                ('articleid', models.CharField(blank=True, db_column='articleID', max_length=36, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('direct_weight', models.FloatField(blank=True, null=True)),
                ('place_weight', models.FloatField(blank=True, null=True)),
                ('similar_title', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_opinion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventSeedsBase',
            fields=[
                ('eventid', models.CharField(db_column='eventID', max_length=36, primary_key=True, serialize=False)),
                ('eventname', models.CharField(blank=True, db_column='eventName', max_length=512, null=True)),
                ('eventintroduction', models.TextField(blank=True, db_column='eventIntroduction', null=True)),
                ('starttime', models.CharField(blank=True, db_column='startTime', max_length=256, null=True)),
                ('istrue', models.CharField(blank=True, db_column='isTrue', max_length=10, null=True)),
            ],
            options={
                'db_table': 'event_seeds_base',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndicatorValue',
            fields=[
                ('indicatorvalueid', models.CharField(db_column='indicatorValueID', max_length=36, primary_key=True, serialize=False)),
                ('indicatorvalue', models.CharField(blank=True, db_column='indicatorValue', max_length=64, null=True)),
                ('indexname', models.CharField(blank=True, db_column='indexName', max_length=36, null=True)),
                ('dimensionname', models.CharField(blank=True, db_column='dimensionName', max_length=36, null=True)),
                ('dimensionvalue', models.CharField(blank=True, db_column='dimensionValue', max_length=36, null=True)),
                ('starttime', models.CharField(blank=True, db_column='startTime', max_length=128, null=True)),
                ('endtime', models.CharField(blank=True, db_column='endTime', max_length=128, null=True)),
                ('timesolt', models.CharField(blank=True, db_column='timeSolt', max_length=255, null=True)),
            ],
            options={
                'db_table': 'indicator_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('keywordid', models.CharField(db_column='keywordID', max_length=36, primary_key=True, serialize=False)),
                ('keyword', models.CharField(blank=True, max_length=64, null=True)),
                ('weight', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'keyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KeywordRelatedDegree',
            fields=[
                ('keyworddegreeid', models.CharField(db_column='keywordDegreeID', max_length=64, primary_key=True, serialize=False)),
                ('relateddegree', models.FloatField(blank=True, db_column='relatedDegree', null=True)),
            ],
            options={
                'db_table': 'keyword_related_degree',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('logid', models.CharField(db_column='logID', max_length=36, primary_key=True, serialize=False)),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=64, null=True)),
                ('logtime', models.CharField(blank=True, db_column='logTime', max_length=32, null=True)),
                ('methodlogicname', models.CharField(blank=True, db_column='methodLogicName', max_length=255, null=True)),
                ('method', models.CharField(blank=True, max_length=255, null=True)),
                ('param', models.CharField(blank=True, max_length=1000, null=True)),
                ('sourcepage', models.CharField(blank=True, db_column='sourcePage', max_length=255, null=True)),
                ('targetpage', models.CharField(blank=True, db_column='targetPage', max_length=255, null=True)),
                ('staytime', models.CharField(blank=True, db_column='stayTime', max_length=36, null=True)),
            ],
            options={
                'db_table': 'log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('messageid', models.CharField(db_column='messageID', max_length=36, primary_key=True, serialize=False)),
                ('messagetitle', models.TextField(blank=True, db_column='messageTitle', null=True)),
                ('messagecontent', models.TextField(blank=True, db_column='messageContent', null=True)),
                ('messagetime', models.CharField(blank=True, db_column='messageTime', max_length=36, null=True)),
            ],
            options={
                'db_table': 'message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageUser',
            fields=[
                ('messageuserid', models.CharField(db_column='messageUserID', max_length=36, primary_key=True, serialize=False)),
                ('state', models.CharField(blank=True, max_length=36, null=True)),
            ],
            options={
                'db_table': 'message_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('noticeid', models.CharField(db_column='noticeID', max_length=36, primary_key=True, serialize=False)),
                ('noticetitle', models.TextField(blank=True, db_column='noticeTitle', null=True)),
                ('noticecontent', models.TextField(blank=True, db_column='noticeContent', null=True)),
                ('notictime', models.CharField(blank=True, db_column='noticTime', max_length=36, null=True)),
            ],
            options={
                'db_table': 'notice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoticeRole',
            fields=[
                ('noticeroleid', models.CharField(db_column='noticeRoleID', max_length=36, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'notice_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('objectid', models.CharField(db_column='objectID', max_length=36, primary_key=True, serialize=False)),
                ('scannumber', models.IntegerField(blank=True, db_column='scanNumber', null=True)),
                ('collectnumber', models.IntegerField(blank=True, db_column='collectNumber', null=True)),
                ('likenumber', models.IntegerField(blank=True, db_column='likeNumber', null=True)),
                ('truenumber', models.IntegerField(blank=True, db_column='trueNumber', null=True)),
                ('falsenumber', models.IntegerField(blank=True, db_column='falseNumber', null=True)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('addtime', models.CharField(blank=True, db_column='addTime', max_length=32, null=True)),
                ('place', models.CharField(blank=True, max_length=64, null=True)),
                ('objecttype', models.CharField(blank=True, db_column='objectType', max_length=32, null=True)),
                ('commentnumber', models.IntegerField(blank=True, db_column='commentNumber', null=True)),
                ('introduction', models.CharField(blank=True, max_length=255, null=True)),
                ('credibility', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'object',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectUser',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('otype', models.CharField(blank=True, db_column='oType', max_length=255, null=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'object_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Operate',
            fields=[
                ('operateid', models.CharField(db_column='operateID', max_length=36, primary_key=True, serialize=False)),
                ('operatename', models.CharField(blank=True, db_column='operateName', max_length=64, null=True)),
            ],
            options={
                'db_table': 'operate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('permissionid', models.CharField(db_column='permissionID', max_length=36, primary_key=True, serialize=False)),
                ('permissionname', models.CharField(blank=True, db_column='permissionName', max_length=64, null=True)),
                ('action', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('name_logic', models.CharField(blank=True, max_length=255, null=True)),
                ('permission_physics', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'province',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('resourceid', models.CharField(db_column='resourceID', max_length=36, primary_key=True, serialize=False)),
                ('resourcename', models.CharField(blank=True, db_column='resourceName', max_length=64, null=True)),
            ],
            options={
                'db_table': 'resource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('roleid', models.CharField(db_column='roleID', max_length=36, primary_key=True, serialize=False)),
                ('rolename', models.CharField(blank=True, db_column='roleName', max_length=64, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('role_permissionid', models.CharField(db_column='role_permissionID', max_length=36, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'role_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpiderConfig',
            fields=[
                ('spiderconfigid', models.CharField(db_column='spiderConfigID', max_length=36, primary_key=True, serialize=False)),
                ('configtime', models.CharField(blank=True, db_column='configTime', max_length=32, null=True)),
                ('spiderruntime', models.CharField(blank=True, db_column='spiderRunTime', max_length=64, null=True)),
                ('logpath', models.CharField(blank=True, db_column='logPath', max_length=64, null=True)),
                ('filepath', models.CharField(blank=True, db_column='filePath', max_length=64, null=True)),
                ('spiderfrequency', models.IntegerField(blank=True, db_column='spiderFrequency', null=True)),
                ('configname', models.CharField(blank=True, db_column='configName', max_length=64, null=True)),
            ],
            options={
                'db_table': 'spider_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpiderConfigItem',
            fields=[
                ('spiderconfigitemid', models.CharField(db_column='spiderConfigItemID', max_length=36, primary_key=True, serialize=False)),
                ('configitemname', models.CharField(blank=True, db_column='configItemName', max_length=64, null=True)),
                ('configitemvalue', models.TextField(blank=True, db_column='configItemValue', null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'spider_config_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpiderErrorLog',
            fields=[
                ('logid', models.CharField(db_column='logID', max_length=36, primary_key=True, serialize=False)),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=255, null=True)),
                ('erroritem', models.CharField(blank=True, db_column='errorItem', max_length=255, null=True)),
                ('errordetails', models.TextField(blank=True, db_column='errorDetails', null=True)),
                ('errortime', models.CharField(blank=True, db_column='errorTime', max_length=36, null=True)),
            ],
            options={
                'db_table': 'spider_error_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpiderInfo',
            fields=[
                ('spiderid', models.CharField(db_column='spiderID', max_length=36, primary_key=True, serialize=False)),
                ('spidername', models.CharField(blank=True, db_column='spiderName', max_length=64, null=True)),
                ('addtime', models.CharField(blank=True, db_column='addTime', max_length=32, null=True)),
                ('spidersourcepath', models.CharField(blank=True, db_column='spiderSourcePath', max_length=64, null=True)),
                ('filename', models.CharField(blank=True, db_column='fileName', max_length=255, null=True)),
                ('fileid', models.CharField(blank=True, db_column='fileID', max_length=36, null=True)),
                ('spiderstate', models.CharField(blank=True, db_column='spiderState', max_length=32, null=True)),
            ],
            options={
                'db_table': 'spider_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbUser',
            fields=[
                ('u_id', models.AutoField(primary_key=True, serialize=False)),
                ('u_name', models.CharField(blank=True, max_length=50, null=True)),
                ('u_pwd', models.CharField(blank=True, max_length=128, null=True)),
                ('u_telphone', models.CharField(blank=True, max_length=30, null=True)),
                ('u_mail', models.CharField(blank=True, max_length=30, null=True)),
                ('u_sex', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('toolid', models.CharField(db_column='toolID', max_length=36, primary_key=True, serialize=False)),
                ('toolname', models.CharField(blank=True, db_column='toolName', max_length=36, null=True)),
                ('version', models.CharField(blank=True, max_length=36, null=True)),
                ('versiondescribe', models.CharField(blank=True, db_column='versionDescribe', max_length=1000, null=True)),
                ('jarurl', models.CharField(blank=True, db_column='jarUrl', max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=26, null=True)),
                ('uploadtime', models.CharField(blank=True, db_column='uploadTime', max_length=36, null=True)),
            ],
            options={
                'db_table': 'tool',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Toolkit',
            fields=[
                ('toolkitid', models.CharField(db_column='toolkitID', max_length=36, primary_key=True, serialize=False)),
                ('toolkitname', models.CharField(blank=True, db_column='toolkitName', max_length=255, null=True)),
                ('toolkitdescribe', models.CharField(blank=True, db_column='toolkitDescribe', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'toolkit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.CharField(db_column='userID', max_length=36, primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, db_column='userName', max_length=64, null=True)),
                ('password', models.CharField(blank=True, max_length=64, null=True)),
                ('email', models.CharField(blank=True, max_length=32, null=True)),
                ('registrantid', models.CharField(blank=True, db_column='registrantID', max_length=36, null=True)),
                ('usertype', models.CharField(blank=True, db_column='userType', max_length=32, null=True)),
                ('isauthenticated', models.CharField(blank=True, db_column='isAuthenticated', max_length=2, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('registranttime', models.CharField(blank=True, db_column='registrantTime', max_length=255, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserOpera',
            fields=[
                ('operaid', models.CharField(db_column='operaID', max_length=36, primary_key=True, serialize=False)),
                ('operatype', models.CharField(blank=True, db_column='operaType', max_length=36, null=True)),
                ('operatime', models.CharField(blank=True, db_column='operaTime', max_length=36, null=True)),
            ],
            options={
                'db_table': 'user_opera',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserOperaComment',
            fields=[
                ('useroperacommentid', models.CharField(db_column='userOperaCommentID', max_length=36, primary_key=True, serialize=False)),
                ('operatype', models.CharField(blank=True, db_column='operaType', max_length=32, null=True)),
            ],
            options={
                'db_table': 'user_opera_comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserOperaStyle',
            fields=[
                ('userstyleid', models.CharField(db_column='userStyleID', max_length=36, primary_key=True, serialize=False)),
                ('operaid', models.CharField(blank=True, db_column='operaID', max_length=36, null=True)),
                ('operatype', models.CharField(blank=True, db_column='operaType', max_length=36, null=True)),
            ],
            options={
                'db_table': 'user_opera_style',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('websiteid', models.CharField(db_column='websiteID', max_length=36, primary_key=True, serialize=False)),
                ('websitename', models.CharField(blank=True, db_column='websiteName', max_length=64, null=True)),
                ('websiteurl', models.CharField(blank=True, db_column='websiteURL', max_length=64, null=True)),
                ('containtableid', models.CharField(blank=True, db_column='containTableID', max_length=36, null=True)),
                ('websitetypeid', models.CharField(blank=True, db_column='websiteTypeID', max_length=36, null=True)),
            ],
            options={
                'db_table': 'website',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('userid', models.ForeignKey(db_column='userID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='visitor.User')),
                ('realname', models.CharField(blank=True, db_column='realName', max_length=32, null=True)),
                ('phonenumber', models.CharField(blank=True, db_column='phoneNumber', max_length=64, null=True)),
            ],
            options={
                'db_table': 'admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyUser',
            fields=[
                ('userid', models.ForeignKey(db_column='userID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='visitor.User')),
                ('bossname', models.CharField(blank=True, db_column='bossName', max_length=32, null=True)),
                ('idfronturl', models.CharField(blank=True, db_column='IDFrontUrl', max_length=255, null=True)),
                ('companyname', models.CharField(blank=True, db_column='companyName', max_length=64, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
                ('idbackurl', models.CharField(blank=True, db_column='IDBackUrl', max_length=255, null=True)),
                ('businesslicenceurl', models.CharField(blank=True, db_column='businessLicenceUrl', max_length=255, null=True)),
                ('businesslicenceid', models.CharField(blank=True, db_column='businessLicenceId', max_length=64, null=True)),
            ],
            options={
                'db_table': 'company_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('objectid', models.ForeignKey(db_column='objectID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='visitor.Object')),
                ('objecttypeid', models.CharField(blank=True, db_column='objectTypeID', max_length=36, null=True)),
                ('introduction', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'entity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('objectid', models.ForeignKey(db_column='objectID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='visitor.Object')),
                ('eventsummary', models.CharField(blank=True, db_column='eventSummary', max_length=1024, null=True)),
                ('eventbegintime', models.CharField(blank=True, db_column='eventBeginTime', max_length=128, null=True)),
                ('eventendtime', models.CharField(blank=True, db_column='eventEndTime', max_length=128, null=True)),
                ('introduction', models.CharField(blank=True, max_length=1024, null=True)),
                ('eventbeaintime', models.CharField(blank=True, db_column='eventBeainTime', max_length=255, null=True)),
                ('eventovertime', models.CharField(blank=True, db_column='eventOverTime', max_length=255, null=True)),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GovUser',
            fields=[
                ('userid', models.ForeignKey(db_column='userID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='visitor.User')),
                ('bossname', models.CharField(blank=True, db_column='bossName', max_length=32, null=True)),
                ('govname', models.CharField(blank=True, db_column='govName', max_length=64, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
                ('govcode', models.CharField(blank=True, db_column='govCode', max_length=32, null=True)),
                ('idfronturl', models.CharField(blank=True, db_column='IDFrontUrl', max_length=255, null=True)),
                ('idbackurl', models.CharField(blank=True, db_column='IDBackUrl', max_length=255, null=True)),
                ('govcodeurl', models.CharField(blank=True, db_column='govCodeUrl', max_length=255, null=True)),
                ('idfront', models.CharField(blank=True, db_column='IDFront', max_length=255, null=True)),
                ('idback', models.CharField(blank=True, db_column='IDBack', max_length=255, null=True)),
                ('provepicture', models.CharField(blank=True, db_column='provePicture', max_length=255, null=True)),
            ],
            options={
                'db_table': 'gov_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InstitutionUser',
            fields=[
                ('bossname', models.CharField(blank=True, db_column='bossName', max_length=32, null=True)),
                ('idfronturl', models.CharField(blank=True, db_column='IDFrontUrl', max_length=255, null=True)),
                ('idbackurl', models.CharField(blank=True, db_column='IDBackUrl', max_length=255, null=True)),
                ('institutionname', models.CharField(blank=True, db_column='institutionName', max_length=64, null=True)),
                ('type', models.CharField(blank=True, max_length=32, null=True)),
                ('institudecode', models.CharField(blank=True, db_column='institudeCode', max_length=64, null=True)),
                ('institudecodeurl', models.CharField(blank=True, db_column='institudeCodeUrl', max_length=255, null=True)),
                ('userid', models.ForeignKey(db_column='userID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='visitor.User')),
                ('idfront', models.CharField(blank=True, db_column='IDFront', max_length=255, null=True)),
                ('idback', models.CharField(blank=True, db_column='IDBack', max_length=255, null=True)),
                ('registergraph', models.CharField(blank=True, db_column='registerGraph', max_length=255, null=True)),
            ],
            options={
                'db_table': 'institution_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonUser',
            fields=[
                ('userid', models.ForeignKey(db_column='userID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='visitor.User')),
                ('sex', models.CharField(blank=True, max_length=16, null=True)),
                ('birthday', models.CharField(blank=True, max_length=32, null=True)),
                ('phonenumber', models.CharField(blank=True, db_column='phoneNumber', max_length=64, null=True)),
                ('hobby', models.CharField(blank=True, max_length=64, null=True)),
                ('career', models.CharField(blank=True, max_length=32, null=True)),
                ('realname', models.CharField(blank=True, db_column='realName', max_length=32, null=True)),
            ],
            options={
                'db_table': 'person_user',
                'managed': False,
            },
        ),
    ]
